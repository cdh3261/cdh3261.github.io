I"r<h1 id="backjoon">BACKJOON</h1>

<h2 id="10828스택">10828.스택</h2>

<pre><code class="language-python">N = int(input())
stack = []
result = []
for _ in range(N):
    message = input()
    if message[:4] == 'push':
        stack.append(message[5:])
    elif message[:3] == 'pop':
        if stack:
            result.append(stack.pop())
        else:
            result.append(-1)
    elif message[:4] == 'size':
        result.append(len(stack))
    elif message[:5] == 'empty':
        if stack:
            result.append(0)
        else:
            result.append(1)
    else:
        if stack:
            result.append(stack[-1])
        else:
            result.append(-1)
for i in result:
    print(i)
</code></pre>

<p>[배열의 크기를 정해놓고 푼 2번째 방식]</p>

<pre><code class="language-python">def stack_push(n):
    global rear, stack

    rear += 1
    stack[rear] = n


def stack_pop():
    global rear, stack

    if rear &gt;= 0:
        temp = stack[rear]
        stack[rear] = 0
        rear -= 1
        return temp
    return -1


N = int(input())
stack = [0] * N
result = []
rear = -1
for _ in range(N):
    commend = input()
    if commend[:4] == 'push':
        stack_push(commend[5:])
    elif commend[:3] == 'pop':
        result.append(stack_pop())
    elif commend[:4] == 'size':
        result.append(rear+1)
    elif commend[:5] == 'empty':
        if rear &gt;= 0:
            result.append(0)
        else:
            result.append(1)
    else:
        if rear &gt;= 0:
            result.append(stack[rear])
        else:
            result.append(-1)
for i in result:
    print(i)
</code></pre>

:ET